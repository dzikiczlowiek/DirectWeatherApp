//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DirectWeather.UnitTests.OpenWeatherMap.CountryCodeSourceTests {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class TestData {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TestData() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DirectWeather.UnitTests.OpenWeatherMap.CountryCodeSourceTests.TestData", typeof(TestData).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AALAND ISLANDS|AX
        ///AFGHANISTAN|AF
        ///ALBANIA|AL
        ///ALGERIA|DZ
        ///AMERICAN SAMOA|AS
        ///ANDORRA|AD
        ///ANGOLA|AO
        ///ANGUILLA|AI
        ///ANTARCTICA|AQ
        ///ANTIGUA AND BARBUDA|AG
        ///ARGENTINA|AR
        ///ARMENIA|AM
        ///ARUBA|AW
        ///AUSTRALIA|AU
        ///AUSTRIA|AT
        ///AZERBAIJAN|AZ
        ///BAHAMAS|BS
        ///BAHRAIN|BH
        ///BANGLADESH|BD
        ///BARBADOS|BB
        ///BELARUS|BY
        ///BELGIUM|BE
        ///BELIZE|BZ
        ///BENIN|BJ
        ///BERMUDA|BM
        ///BHUTAN|BT
        ///BOLIVIA|BO
        ///BOSNIA AND HERZEGOWINA|BA
        ///BOTSWANA|BW
        ///BOUVET ISLAND|BV
        ///BRAZIL|BR
        ///BRITISH INDIAN OCEAN TERRITORY|IO
        ///BRUNEI DARUSSALAM|BN
        ///BULGARIA|BG
        ///BURKINA FAS [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string country_codes {
            get {
                return ResourceManager.GetString("country_codes", resourceCulture);
            }
        }
    }
}
